1. remote/master repo (mark)
2. user repo (sangeeth)
3. local repo (computer)
invoice (mark) 10 commits -> invoice (sangeeth) 10 commits
invoice (mark) 11 commits -> invoice (sangeeth) 10 commits

another-branch -> 5 commits
* development -> 6 commits
new branch = feature1 -> 6 commits
1. fork
2. clone
3. git remote -v
4. git branch
git branch -a
git branch -r 
5. git fetch --all
6. git branch "new-branch"
git checkout new-branch 
7. git checkout -b "another-branch"
8. git status
9. git diff
10. git add <path to the file>
11. git log
12. git commit -m "your commit message"
13. git push origin HEAD
14. git commit --amend (ctl + o, enter, ctl+x)

unstaged: list of modifi`ed files
untracked: new files
staged:



Video-
git status
git add css/general.css (to add 1 file)
git diff index.html(for knowing the difference)
git add -p index.html(p brings out to the patch level)  after it type yes or no accordingly
git status
git commit (after this editor will open and you can type a commit msg- leave 1 line for body)
git log(to see it.)

Do fork (as we can't change the repo so we copy(fork) it and then make the changes)
We create branch and then make the changes. So, this is also important to understand pull requests are always based on branches, not on individual commits.
So, we create new branch which we later request to be included.

git branch test(test branch created)
git checkout test(switched to test branch)

git add .
git commit -m "message"
git push--set-upstream origin test

git merge develop(For Merging)
Merge Conflicts
git merge --abort
git rebase --abort
